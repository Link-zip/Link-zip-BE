paths:
  /user/login:
    post:
      tags:
        - User
      summary: 소셜 로그인
      description: | 
        카카오 access token을 받아 소셜 로그인을 진행합니다. 
        기존 유저라면 토큰을 반환하며, 신규 유저라면 회원가입을 위한 key를 반환합니다.
      parameters:
        - in: body
          name: body
          description: 카카오 access token
          required: true
          schema:
            type: object
            properties:
              accessToken: 
                type: string
              accessTokenExpires:
                type: string
              refreshToken:
                type: string
              refreshTokenExpires:
                type: string
      responses:
        "200":
          description: 소셜 로그인 성공
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                example: 2000
              message:
                type: string
                example: success!
              result:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEyMiwibmlja25hbWUiOiJzdHJpbmciLCJrYWthb0lkIjozNjQ2Mzk1ODU5LCJjb25uZWN0ZWRBdCI6IjIwMjQtMDgtMDFUMDQ6MzI6MjJaIiwiaWF0IjoxNzIzMDA5MDQ2LCJleHAiOjE3MjMwMTI2NDZ9.bCGW7EZH6fEcLS_KZD5UOVBfuVlbK2vWmLuRoriUn3o
        "404":
          description: 소셜 로그인 실패
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: USER001
              message:
                type: string
                example: 4ea5c508a6566e76240543f8feb06fd457777be39549c4016436afda65d2330e
        "500":
          description: 서버 에러
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 500
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: COMMON000
              message:
                type: string
                example: 서버 에러, 관리자에게 문의 바랍니다.
  /user:
    get:
      tags:
        - User
      summary: 닉네임 중복 확인
      description: |
        사용자 회원가입 또는 정보 수정 시 입력한 닉네임이 중복되는지 확인합니다.
        성공 시 200과 함께 메시지를, 닉네임 중복 시 400 에러와 함께 메시지를 반환합니다.
      parameters:
        - in: query
          name: nickname
          required: true
          type: string
          description: 사용자 닉네임
      responses:
        "200":
          description: 닉네임 중복 없음
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: 환상적인 닉네임이에요!
              result:
                type: boolean
                example: true
        "400":
          description: 닉네임 중복
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: USER002
              message:
                type: string
                example: 이미 사용 중인 닉네임이에요!
        "500":
          description: 서버 에러
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 500
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: COMMON000
              message:
                type: string
                example: 서버 에러, 관리자에게 문의 바랍니다.
    post:
      tags:
        - User
      summary: 사용자 회원가입
      description: |
        사용자 회원가입을 진행합니다. 로그인 실패 시 내려간 key값과 닉네임을 받아 토큰을 반환합니다.
      parameters:
        - in: body
          name: body
          description: 회원가입 key 및 사용자 닉네임
          required: true
          schema:
            type: object
            properties:
              nickname:
                type: string
              key:
                type: string
                example: 4ea5c508a6566e76240543f8feb06fd457777be39549c4016436afda65d2330e
      responses:
        "200":
          description: 사용자 회원가입 성공
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                example: 2000
              message:
                type: string
                example: success!
              result:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEyMiwibmlja25hbWUiOiJzdHJpbmciLCJrYWthb0lkIjozNjQ2Mzk1ODU5LCJjb25uZWN0ZWRBdCI6IjIwMjQtMDgtMDFUMDQ6MzI6MjJaIiwiaWF0IjoxNzIzMDA5MDQ2LCJleHAiOjE3MjMwMTI2NDZ9.bCGW7EZH6fEcLS_KZD5UOVBfuVlbK2vWmLuRoriUn3o
        "400":
          description: 잘못된 요청
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: USER003
              message:
                type: string
                example: 유효하지 않은 키입니다.
        "500":
          description: 서버 에러
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 500
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: COMMON000
              message:
                type: string
                example: 서버 에러, 관리자에게 문의 바랍니다.
  /user/info:
    get:
      tags:
        - User
      summary: 사용자 정보 조회
      description: 사용자 정보 조회를 위한 임시 API 입니다.
      responses:
        "200":
          description: 사용자 정보 조회 성공
          schema:
            type: object
            properties:
              userId:
                type: integer
              nickname:
                type: string
              kakaoId:
                type: integer
              createdAt:
                type: string
        "400":
          description: 잘못된 요청
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: COMMON001
              message:
                type: string
                example: 잘못된 요청입니다
        "500":
          description: 서버 에러
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 500
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: COMMON000
              message:
                type: string
                example: 서버 에러, 관리자에게 문의 바랍니다.
  /user/token/test:
    post:
      tags:
        - User
      summary: 테스트용 토큰 발급
      description: 테스트용 액세스 토큰 발급 api입니다. userId 99번 유저로 발급됩니다.
      responses:
        "200":
          description: 토큰 발급 성공
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: true
              code:
                example: 2000
              message:
                type: string
                example: success!
              result:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEyMiwibmlja25hbWUiOiJzdHJpbmciLCJrYWthb0lkIjozNjQ2Mzk1ODU5LCJjb25uZWN0ZWRBdCI6IjIwMjQtMDgtMDFUMDQ6MzI6MjJaIiwiaWF0IjoxNzIzMDA5MDQ2LCJleHAiOjE3MjMwMTI2NDZ9.bCGW7EZH6fEcLS_KZD5UOVBfuVlbK2vWmLuRoriUn3o
        "400":
          description: 토큰 발급 실패
          schema:
            type: object
            properties:
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: TOKEN002
              message:
                type: string
                example: 서버 토큰 발급에 실패했습니다.
        "500":
          description: 서버 에러
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 500
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: COMMON000
              message:
                type: string
                example: 서버 에러, 관리자에게 문의 바랍니다.